/* You can add global styles to this file, and also import other style files */
@import '~@angular/material/prebuilt-themes/deeppurple-amber.css';
@import './project_theme';


@include mat-core();
.example-header-image {
  background-image: url('./assets/logo_Bairro_Social.png');
  background-size: cover;
}

body { 
  font-family: Roboto, Arial, sans-serif;
  margin: 0;
}

.mat-toolbar {
  display: grid;
  grid-gap: 5px;  
  height: 43px !important;      
  align-content: space-between;
  grid-template-columns: 40px auto auto 40px !important;         
  grid-template-rows: 50px !important;         
  grid-auto-rows: 120px;
  /*background: #97550B !important;*/
  display: flex;
  width: 100%;  
  flex-direction: row;
  align-items: center ; 
  white-space: nowrap;
  color: #FFFFFF;
}

mat-stepper .horizontal mat-step .step-header {
  display: none;
  font-size: 10px;
}

.step-header {
  position: relative;
  padding: 10px;
}

.step-header .label {
  margin: 0 8px;
}

.step-content {
  padding: 10px;
  font-size: 10px;
}

mat-stepper .vertical mat-step .step-content {
  margin: 0 0 0 20px;
  border-left: 1px solid #e0e0e0;
  font-size: 10px;
}

.step-header .line {
  margin-right: 8px;
  width: 100%;
  height: 1px;
  background-color: #e0e0e0;
}

.step-circle {
  background-color: #9b9b9b;
}

.step-circle.done {
  background-color: #3f51b5;
}

.step-circle {
  width: 24px;
  height: 24px;
  line-height: 24px;
  border-radius: 50%;
  color: #fff;
  font-size: 12px;
  text-align: center;
}

.mat-sidenav {

  z-index:1000;
  top:0;
  box-shadow:2px 0px 10px grey;
  flex-shrink: 0;
  overflow-x: hidden;
  &:not(.cover) {
      width: 250px; 
      transition: width 0.4s ease-in;
      &.open {
          width: 250px;
          transition: width 0.4s ease-out;
      }
  }
  &.cover {
      width: 250px;
      position: fixed;
      top: 5;
      left: 0;
      bottom: 0;
      margin-left: -250px;
      transition: margin 0.4s ease-in;
      &.open {
          margin-left: 0;
          transition: margin 0.4s ease-out;
      }
  }
}

@import "~@angular/material/prebuilt-themes/indigo-pink.css";

/*
* Actual Sticky Footer Styles
*/
.all-wrap {
 min-height: 100vh;
}

.page-wrap {
 display: flex;
 flex-direction: column;
 min-height: 100vh;
}

.content {
 flex: 1;
}


/*
* Make the Component injected by Router Outlet full height:
*/
main {
 display: flex;
 flex-direction: column;
 > *:not(router-outlet) {
   flex: 1;
   display: block;
 }
}

.gradiente-conteiner{
  background: #FF8008;  /* fallback for old browsers */
  background: -webkit-linear-gradient(to bottom, #FFC837, #FF8008);  /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(to bottom, #FFC837, #FF8008); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  
}
.example-container {
  display: flex;
  flex-direction: column;
  position: relative;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.example-is-mobile .example-toolbar {
  position: fixed;
  /* Make sure the toolbar will stay on top of the content as it scrolls past. */
  z-index: 2;
}

/** No CSS for this example */


/* In general, top-margin is used to set the vertical position of the element's
 * baseline with left/right neighbors. Height is used to set vertical position
 * of the next element down the page. Each element's overall height is 66px here.
 */
 .mat-select {
  margin-top: 16px;
  height: 50px;
}

mat-card {
  margin: 0px;
  font-size: 10px;
  width: 100%;
}

.mat-card-content-about {
  height: 100%;
  width: 90%;
  padding-top:10%;  
}

mat-card-title {
  margin-bottom: 50px;
}
mat-card-actions {
  margin-bottom: 0px;
}
.question-form {
  width: 90%;
}
.full-width {
  width: 100%;
}

.mat-form-field-infix {
  display: block;
  position: relative;
  -webkit-box-flex: 1;
  -ms-flex: auto;
  flex: auto;
  font-size: 12px;
  min-width: 0;
  width: 180px;
}

.mat-radio-group, .checkbox-container {
  display: flex;
  flex-wrap: wrap;
}

.mat-checkbox {
  display: inline-block;
  margin-right: 16px;
  margin-top: 18px;
  height: 48px;
}
.mat-radio-button {
  margin-right: 16px;
  margin-top: 20px;
  height: 46px;
}

.mat-slider-horizontal {
  width: 95%;
  margin-top: 21px;
  height: 45px;
}


.header_menu{       
  text-align: left; 
  margin-top: 45px !important;
   background-image: url('./assets/down-arrow.png') !important;
  background-repeat: no-repeat;
  background-size: auto;
  background-position-x: -20px;
  background-position-y: 20px;  
}

.dropdown:hover .dropdown-menu {
  display: block;
}



.example-spacer {
  flex: 1 1 auto;
}





@mixin mat-stepper-theme($theme) {
  $foreground: map-get($theme, foreground);
  $background: map-get($theme, background);
  $primary: map-get($theme, primary);

  .mat-step-header {
    &.cdk-keyboard-focused,
    &.cdk-program-focused,
    &:hover {
      background-color: mat-color($background, hover);
    }

    .mat-step-label,
    .mat-step-optional {
      color: mat-color($foreground, disabled-text);
      font-size: 12px;
    }

    .mat-step-icon {
      background-color: mat-color($primary);
      color: mat-color($primary, default-contrast);
    }

    .mat-step-icon-not-touched {
      background-color: mat-color($foreground, disabled-text);
      color: mat-color($primary, default-contrast);
      
    }

    .mat-step-label.mat-step-label-active {
      color: mat-color($foreground, text);
      font-size: 10px;
    }
  }

  .mat-stepper-horizontal, .mat-stepper-vertical {
    background-color: mat-color($background, card);
    font-size: 10px;
  }

  .mat-stepper-vertical-line::before {
    border-left-color: mat-color($foreground, divider);
  }

  .mat-stepper-horizontal-line {
    border-top-color: mat-color($foreground, divider);
  }
}

@mixin mat-stepper-typography($config) {
  .mat-stepper-vertical, .mat-stepper-horizontal {
    font-family: mat-font-family($config);
    font-size: 10px;
  }

  .mat-step-label {
    font: {
      size: mat-font-size($config, body-1);
      weight: mat-font-weight($config, body-1);
      font-size: 10px;
    };
  }

  .mat-step-label-selected {
    font: {
      size: mat-font-size($config, body-2);
      weight: mat-font-weight($config, body-2);
    };
  }
}


// height of tile header or footer if it has one line
$mat-grid-list-one-line-height: 48px;
// height of tile header or footer if it has two lines
$mat-grid-list-two-line-height: 68px;
// side padding for text in tile headers and footers
$mat-grid-list-text-padding: 16px;

.mat-grid-list {
  display: block;
  position: relative;
}

.mat-grid-tile {
  display: block;
  position: absolute;
  overflow: hidden;

  .mat-figure {
    @include mat-fill;
    display: flex;

    align-items: center;
    justify-content: center;
    height: 100%;

    padding: 0;
    margin: 0;
  }

  // Headers & footers
  .mat-grid-tile-header,
  .mat-grid-tile-footer {
    @include mat-normalize-text();

    display: flex;
    align-items: center;
    height: $mat-grid-list-one-line-height;
    color: #fff;
    background: rgba(0, 0, 0, 0.38);
    overflow: hidden;
    padding: 0 $mat-grid-list-text-padding;

    // Positioning
    position: absolute;
    left: 0;
    right: 0;

    &.mat-2-line {
      height: $mat-grid-list-two-line-height;
    }
  }

  .mat-grid-list-text {
    @include mat-line-wrapper-base();
  }

  .mat-grid-tile-header {
    top: 0;
  }

  .mat-grid-tile-footer {
    bottom: 0;
  }

  .mat-grid-avatar {
    padding-right: $mat-grid-list-text-padding;

    [dir='rtl'] & {
      padding-right: 0;
      padding-left: $mat-grid-list-text-padding;
    }

    &:empty {
      display:none;
    }
  }
}


// Min amount of space between start and end hint.
$mat-form-field-hint-min-space: 1em !default;
// The height of the underline.
$mat-form-field-underline-height: 1px !default;
// Infix stretches to fit the container, but naturally wants to be this wide. We set this in order
// to have a a consistent natural size for the various types of controls that can go in a form
// field.
$mat-form-field-default-infix-width: 180px !default;


.mat-form-field {
  display: inline-block;
  position: relative;
  font-size: 11px !important;

  /* To avoid problems with text-align.*/
  text-align: left;
  font-size: 12px;

  [dir='rtl'] & {
    text-align: right;
  }
}

/** Global wrapper. We need to apply margin to the element for spacing, but
// cannot apply it to the host element directly.**/
.mat-form-field-wrapper {
  position: relative;
}

/** We use a flex layout to baseline align the prefix and suffix elements.
// The underline is outside of it so it can cover all of the elements under this flex container.**/
.mat-form-field-flex {
  display: inline-flex;
  align-items: baseline;
  width: 100%;
}

.mat-form-field-prefix,
.mat-form-field-suffix {
  white-space: nowrap;
  flex: none;
  font-size: 12px;

  /*Allow icons in a prefix or suffix to adapt to the correct size.*/ 
  .mat-icon {
    width: 1em;
  }

  /*Allow icon buttons in a prefix or suffix to adapt to the correct size.*/ 
  .mat-icon-button {
    font-size: 12px;
    vertical-align: baseline;

  }
}

.mat-form-field-infix {
  display: block;
  position: relative;
  flex: auto;
  font-size: 12px;
  min-width: 0;
  width: $mat-form-field-default-infix-width;
}

/** Used to hide the label overflow on IE, since IE doesn't take transform into account when
// determining overflow.**/
.mat-form-field-label-wrapper {
  position: absolute;
  left: 0;
  box-sizing: content-box;
  width: 100%;
  height: 100%;
  font-size: 12px;
  overflow: hidden;
  pointer-events: none;  // We shouldn't catch mouse events (let them through).
}

// The label itself. This is invisible unless it is. The logic to show it is
// basically `empty || (float && (!empty || focused))`. Float is dependent on the
// `floatingPlaceholder` property.
.mat-form-field-label {
  // The label is after the form field control, but needs to be aligned top-left of the infix <div>.
  position: absolute;
  left: 0;

  font-size: 12px;
  pointer-events: none;  // We shouldn't catch mouse events (let them through).

  /*Put ellipsis text overflow.*/ 
  width: 100%;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;

  /* The perspective helps smooth out animations on Chrome and Firefox but isn't needed on IE.*/
  transform: perspective(100px);
  -ms-transform: none;

  transform-origin: 0 0;
  transition: transform $swift-ease-out-duration $swift-ease-out-timing-function,
  color $swift-ease-out-duration $swift-ease-out-timing-function,
  width $swift-ease-out-duration $swift-ease-out-timing-function;

  /* Hide the label initially, and only show it when it's floating or the control is empty.*/
  display: none;

  [dir='rtl'] & {
    transform-origin: 100% 0;
    left: auto;
    right: 0;
  }
}

.mat-form-field-empty.mat-form-field-label,
.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {
  display: block;
  font-size: 12px;
}

/** Pseudo-class for Chrome and Safari auto-fill to move the label to the floating position.
 This is necessary because these browsers do not actually fire any events when a form auto-fill is
 occurring. Once the autofill is committed, a change event happen and the regular mat-form-field
 classes take over to fulfill this behaviour.**/

 .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper
    .mat-form-field-label {
  /** The form field will be considered empty if it is autofilled, and therefore the label will**/
  /** be shown. Therefore we need to override it to hidden...**/
  display: none;
  font-size: inherit;

  /*...and re-show it only if it's able to float.*/ 
  .mat-form-field-can-float & {
    display: block;
    transition: none;
  }
}

/** Server-side rendered matInput with focus or a placeholder attribute but placeholder not shown
// (used as a pure CSS stand-in for mat-form-field-should-float).
.mat-input-server:focus + .mat-form-field-placeholder-wrapper .mat-form-field-placeholder,
.mat-input-server[placeholder]:not(:placeholder-shown) + .mat-form-field-placeholder-wrapper**/
    .mat-form-field-placeholder {
  display: none;

  .mat-form-field-can-float & {
    display: block;
    font-size: inherit;
  }
}

/*Disable the label animation when the control is not empty (this prevents label*/ 
/*animating up when the value is set programmatically).*/ 
.mat-form-field-label:not(.mat-form-field-empty) {
  transition: none;
}

/*The underline is what's shown under the control, its prefix and its suffix.*/ 
/*The ripple is the blue animation coming on top of it.*/ 
.mat-form-field-underline {
  font-size: inherit;
  position: absolute;
  height: $mat-form-field-underline-height;
  width: 100%;

  .mat-form-field-disabled & {
    background-position: 0;
    background-color: transparent;
  }

  .mat-form-field-ripple {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: $mat-form-field-underline-height * 2;
    transform-origin: 50%;
    transform: scaleX(0.5);
    visibility: hidden;
    opacity: 0;
    transition: background-color $swift-ease-in-duration $swift-ease-in-timing-function;

    .mat-form-field-invalid:not(.mat-focused) & {
      height: $mat-form-field-underline-height;
    }

    .mat-focused &,
    .mat-form-field-invalid & {
      visibility: visible;
      opacity: 1;
      transform: scaleX(1);
      font-size: 12px;
      transition: transform 300ms $swift-ease-out-timing-function,
        opacity 100ms $swift-ease-out-timing-function,
        background-color 300ms $swift-ease-out-timing-function;
    }
  }
}

/*Wrapper for the hints and error messages.*/ 
.mat-form-field-subscript-wrapper {
  position: absolute;
  width: 100%;
  overflow: hidden; // prevents multi-line errors from overlapping the control
}

/*Scale down icons in the label and hint to be the same size as the text.*/ 
.mat-form-field-subscript-wrapper,
.mat-form-field-label-wrapper {
  .mat-icon {
    width: 1em;
    height: 1em;
    vertical-align: baseline;
  }
}

/*Clears the floats on the hints. This is necessary for the hint animation to work.*/ 
.mat-form-field-hint-wrapper {
  display: flex;
}

/*Spacer used to make sure start and end hints have enough space between them.*/ 
.mat-form-field-hint-spacer {
  flex: 1 0 $mat-form-field-hint-min-space;
}

/*Single error message displayed beneath the form field underline.*/ 
.mat-error {
  display: block;
}





@mixin mat-input-theme($theme) {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $foreground: map-get($theme, foreground);

  .mat-input-element:disabled {
    color: mat-color($foreground, disabled-text);
    font-size: inherit;
  }

  .mat-input-element {
    font-size: inherit;
    caret-color: mat-color($primary);

    @include input-placeholder {
      color: _mat-control-placeholder-color($theme);
    }
  }

  .mat-accent .mat-input-element {
    font-size: inherit;
    caret-color: mat-color($accent);
  }

  .mat-warn .mat-input-element,
  .mat-form-field-invalid .mat-input-element {
    caret-color: mat-color($warn);
    font-size: 12px;
  }
}

@mixin mat-input-typography($config) {
  font-size: 12px;
  // The unit-less line-height from the font config.
  $line-height: mat-line-height($config, input);

  // The amount of space between the top of the line and the top of the actual text
  // (as a fraction of the font-size).
  $line-spacing: ($line-height - 1) / 2;

  // <input> elements seem to have their height set slightly too large on Safari causing the text to
  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.
  input.mat-input-element {
    font-size: inherit;
    margin-top: -$line-spacing * 1em;
  }
}

/deep/ .mat-input-underline {
  background-color: rgb(47, 0, 255);    /* replace this color with your accent color hex code */
width: 90%;
}



.demo-sidenav-area {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex;
  flex-direction: column;

  .mat-toolbar {
    flex: 0;
  }

  .mat-sidenav-container {
    flex: 1;
  }

  .demo-sidenav-content {
    padding: 32px;
  }

  .demo-filler-content {
    padding: 60px;
  }
}





